# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: django-oidc-op

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python setup.py install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 oidc_provider --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 oidc_provider  --max-line-length 120 --count --exit-zero --statistics
    #- name: Test with pytest
      #run: |
        #pytest --cov=oidc_endpoint tests/
    - name: Test with django
      working-directory: ./example
      run: |
        ./manage.py test
    #- name: Bandit Security Scan
      #run: |
        #bandit --skip B105,B106,B107 -r oidc_provider
    #- name: Upload coverage to Codecov
      #uses: codecov/codecov-action@v1
      #with:
        #token: ${{ secrets.CODECOV_TOKEN }}
        #file: example/coverage.xml
        #flags: unittests
        #env_vars: OS,PYTHON
        #name: codecov-umbrella
        #fail_ci_if_error: true
        #path_to_write_report: ./codecov_report.txt
